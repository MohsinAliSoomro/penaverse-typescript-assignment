import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { IQuestion } from "../types";
import { getQuestions } from "../services/axios";
import { shuffle } from "../utils/shaffle";
import Answers from "../components/answers";
import Questions from "../components/questions";
interface IAnswer {
  questionId: string;
  answer: string;
}

const Home: NextPage = () => {
  const [state, setState] = useState({
    isQuesionLoaded: false,
    isLoading: false,
  });
  const [questions, setQuestions] = useState<IQuestion[]>([]);
  const [questionNumber, setQuestionNumber] = useState<number>(0);
  const [answers, setAnswers] = useState<IAnswer[]>([]);
  const [questionAnswer, setQuestionAnswer] = useState<string[][]>([]);
  const fetchQuestion = async () => {
    setQuestionNumber(0);
    setAnswers([]);
    setState({ ...state, isLoading: true });
    const response = await getQuestions();
    if (response !== null) {
      setQuestions(response);
      const qa =
        response &&
        response.map((q) => {
          const copy = [...q.incorrectAnswers];
          copy.push(q.correctAnswer);
          console.log({
            copy,
            correctAnswer: q.correctAnswer,
            question: q.incorrectAnswers,
          });
          return shuffle(copy);
        });
      setQuestionAnswer(qa as string[][]);
      setState({ ...state, isLoading: false, isQuesionLoaded: true });
    }
  };

  const handleAnswer = ({ questionId, answer }: IAnswer) => {
    setAnswers([...answers, { questionId, answer }]);
    setTimeout(() => {
      setQuestionNumber(questionNumber + 1);
    }, 200);
  };
  return (
    <div className="flex justify-center items-center bg-gradient-to-r from-cyan-500 to-blue-500 h-screen text-white">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-full lg:w-6/12 border shadow rounded-2xl">
        <h1 className="font-bold text-center my-8 text-3xl">Quiz App</h1>
        {!state.isQuesionLoaded && (
          <div className="flex justify-center my-8">
            <button className="border  p-3 rounded-lg" onClick={fetchQuestion}>
              Start Game
            </button>
          </div>
        )}
        {questionNumber === 5 ? (
          <Answers
            answers={answers}
            questions={questions}
            fetchQuestion={fetchQuestion}
          />
        ) : (
          <Questions
            handleAnswer={handleAnswer}
            loading={state.isLoading}
            questionAnswer={questionAnswer}
            questionNumber={questionNumber}
            questions={questions}
          />
        )}
      </div>
    </div>
  );
};

export default Home;
